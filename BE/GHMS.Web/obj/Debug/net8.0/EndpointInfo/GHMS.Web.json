{
  "openapi": "3.0.4",
  "info": {
    "title": "GHMS API",
    "version": "v1"
  },
  "paths": {
    "/api/Admin/create-user": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInternalUserReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInternalUserReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInternalUserReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/reset-password": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminResetPasswordReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminResetPasswordReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminResetPasswordReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/delete-user": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/cleanup": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/confirm-email": {
      "get": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Consultation/book": {
      "post": {
        "tags": [
          "Consultation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationBookingReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationBookingReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationBookingReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Consultation/update-status/{id}": {
      "put": {
        "tags": [
          "Consultation"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationStatusUpdateReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationStatusUpdateReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationStatusUpdateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Consultation/my-bookings": {
      "get": {
        "tags": [
          "Consultation"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Consultation/my-appointments": {
      "get": {
        "tags": [
          "Consultation"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Consultation/cancel/{id}": {
      "delete": {
        "tags": [
          "Consultation"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Consultation/propose-reschedule": {
      "post": {
        "tags": [
          "Consultation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RescheduleProposalReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RescheduleProposalReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RescheduleProposalReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Consultation/respond-reschedule": {
      "post": {
        "tags": [
          "Consultation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RespondRescheduleReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RespondRescheduleReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RespondRescheduleReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Medication/schedule": {
      "post": {
        "tags": [
          "Medication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetScheduleReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetScheduleReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetScheduleReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Medication/current-schedule": {
      "get": {
        "tags": [
          "Medication"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Menstrual/log": {
      "post": {
        "tags": [
          "Menstrual"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenstrualCycleCreateReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MenstrualCycleCreateReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MenstrualCycleCreateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Menstrual/cycle-summary": {
      "get": {
        "tags": [
          "Menstrual"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Menstrual/logged-dates": {
      "get": {
        "tags": [
          "Menstrual"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Menstrual/fertility-status": {
      "get": {
        "tags": [
          "Menstrual"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Menstrual/analytics": {
      "get": {
        "tags": [
          "Menstrual"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Menstrual/all-predictions": {
      "get": {
        "tags": [
          "Menstrual"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Notification/my": {
      "get": {
        "tags": [
          "Notification"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Notification/read/{id}": {
      "post": {
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Schedule/assign": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounselorShiftReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounselorShiftReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounselorShiftReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Schedule/my-schedule": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Schedule/available-counselors": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "timeSlot",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TimeSlot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminResetPasswordReq": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsultationBookingReq": {
        "type": "object",
        "properties": {
          "counselorId": {
            "type": "string",
            "nullable": true
          },
          "scheduledDate": {
            "type": "string",
            "format": "date-time"
          },
          "timeSlot": {
            "$ref": "#/components/schemas/TimeSlot"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsultationStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConsultationStatusUpdateReq": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ConsultationStatus"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CounselorShiftReq": {
        "type": "object",
        "properties": {
          "counselorId": {
            "type": "string",
            "nullable": true
          },
          "workDate": {
            "type": "string",
            "format": "date-time"
          },
          "timeSlot": {
            "$ref": "#/components/schemas/TimeSlot"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInternalUserReq": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteUserReq": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginReq": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MenstrualCycleCreateReq": {
        "type": "object",
        "properties": {
          "periodDates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PillType": {
        "enum": [
          21,
          28
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProposedSlotDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeSlot": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegisterReq": {
        "required": [
          "dateOfBirth",
          "email",
          "fullName",
          "gender",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "fullName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "gender": {
            "minLength": 1,
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RescheduleProposalReq": {
        "type": "object",
        "properties": {
          "oldBookingId": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "proposedSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProposedSlotDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RespondRescheduleReq": {
        "type": "object",
        "properties": {
          "proposalId": {
            "type": "integer",
            "format": "int32"
          },
          "accept": {
            "type": "boolean"
          },
          "selectedSlot": {
            "$ref": "#/components/schemas/ProposedSlotDto"
          }
        },
        "additionalProperties": false
      },
      "SetScheduleReq": {
        "type": "object",
        "properties": {
          "pillType": {
            "$ref": "#/components/schemas/PillType"
          },
          "reminderHour": {
            "type": "integer",
            "format": "int32"
          },
          "reminderMinute": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimeSlot": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Nhập token dạng: Bearer {token}",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}