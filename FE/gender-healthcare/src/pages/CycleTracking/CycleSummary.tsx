import React, { useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import MenstrualCycleChart from "../../components/MenstrualCycleChart";
import CyclePhasePieChart from "../../components/CyclePhasePieChart";
import CycleStatistics from "../../components/CycleStatistics";
import { getLoggedDates, getAllPredictions } from "../../api/menstrualApi";

const formatDate = (dateStr?: string) => {
  if (!dateStr) return "N/A";
  const d = new Date(dateStr);
  return isNaN(d.getTime()) ? "N/A" : d.toLocaleDateString();
};

// StatCard n·ªôi tuy·∫øn
const StatCard = ({ icon, label, value, color }: { icon: string, label: string, value: string, color: string }) => (
  <div className={`flex flex-col items-center justify-center bg-white rounded-xl shadow-md p-4 border-t-4 ${color}`}>
    <div className="text-3xl mb-2">{icon}</div>
    <div className="text-lg font-semibold text-gray-700">{label}</div>
    <div className="text-2xl font-bold text-purple-700">{value}</div>
  </div>
);

const CycleSummary: React.FC = () => {
  const location = useLocation();
  const navigate = useNavigate();

  const prediction = location.state?.prediction;
  const [selectedDates, setSelectedDates] = useState<Date[]>([]);
  const [predictions, setPredictions] = useState<any[]>([]);

  useEffect(() => {
    getLoggedDates().then(dates => setSelectedDates(dates));
    getAllPredictions().then(data => setPredictions(data));
  }, []);

  if (!prediction) {
    return (
      <div className="text-center p-6">
        <p className="text-red-500">Kh√¥ng c√≥ d·ªØ li·ªáu d·ª± ƒëo√°n.</p>
        <button
          onClick={() => navigate("/cycle-tracking")}
          className="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
        >
          Quay l·∫°i
        </button>
      </div>
    );
  }

  // T√¨m prediction ch·ª©a ng√†y hi·ªán t·∫°i
  const today = new Date();
  today.setHours(0,0,0,0);
  const currentPrediction = predictions.find(p => {
    const start = new Date(p.startDate);
    start.setHours(0,0,0,0);
    const end = new Date(start);
    end.setDate(start.getDate() + (p.cycleLength || 28) - 1);
    return today >= start && today <= end;
  }) || prediction;

  // T√≠nh s·ªë ng√†y v√πng m√†u m·ª°
  const fertileStart = new Date(currentPrediction.fertileStart);
  const fertileEnd = new Date(currentPrediction.fertileEnd);
  const fertileDays = (fertileStart && fertileEnd && !isNaN(fertileStart.getTime()) && !isNaN(fertileEnd.getTime()))
    ? Math.round((fertileEnd.getTime() - fertileStart.getTime()) / (1000 * 60 * 60 * 24)) + 1
    : 0;

  // ƒê·ªãnh d·∫°ng ng√†y ƒë·∫πp
  const ovulationDateVN = formatDate(currentPrediction.ovulationDate);
  const nextPeriodDateVN =
    currentPrediction.predictedNextCycleStartDate ||
    (currentPrediction.startDate && currentPrediction.cycleLength
      ? formatDate(new Date(new Date(currentPrediction.startDate).setDate(new Date(currentPrediction.startDate).getDate() + currentPrediction.cycleLength)).toISOString())
      : "Ch∆∞a x√°c ƒë·ªãnh"
    );
  const fertileStartVN = formatDate(currentPrediction.fertileStart);
  const fertileEndVN = formatDate(currentPrediction.fertileEnd);

  return (
    <div className="max-w-5xl mx-auto p-6 space-y-8">
      <h1 className="text-3xl font-bold text-center text-purple-700 mb-6">Chu k·ª≥ kinh nguy·ªát c·ªßa b·∫°n</h1>
      <div className="flex justify-center mb-4">
        <button
          onClick={() => navigate('/cycle-tracking')}
          className="bg-pink-500 hover:bg-pink-600 text-white font-semibold px-6 py-2 rounded-full shadow transition"
        >
          Ch·ªânh s·ª≠a chu k·ª≥ kinh nguy·ªát
        </button>
      </div>
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <StatCard icon="ü©∏" label="Chu k·ª≥" value={`${currentPrediction.cycleLength || 28} ng√†y`} color="border-pink-400" />
        <StatCard icon="üå±" label="V√πng m√†u m·ª°" value={`${fertileDays} ng√†y`} color="border-yellow-400" />
        <StatCard icon="ü•ö" label="R·ª•ng tr·ª©ng" value={ovulationDateVN} color="border-green-400" />
        <StatCard icon="üîú" label="K·ª≥ ti·∫øp theo" value={nextPeriodDateVN} color="border-purple-400" />
      </div>
      {/* Box gi·∫£i th√≠ch d·ªØ li·ªáu */}
      <div className="bg-blue-50 border-l-4 border-blue-400 p-4 rounded-lg my-6">
        <h3 className="font-semibold text-blue-700 mb-2 flex items-center"><span className="mr-2">‚ÑπÔ∏è</span>Gi·∫£i th√≠ch c√°c d·ªØ li·ªáu v√† cƒÉn c·ª© t√≠nh to√°n</h3>
        <ul className="list-disc pl-5 text-sm text-blue-800 space-y-1">
          <li>
            <b>Chu k·ª≥:</b> S·ªë ng√†y gi·ªØa hai l·∫ßn c√≥ kinh li√™n ti·∫øp, ƒë∆∞·ª£c t√≠nh d·ª±a tr√™n c√°c ng√†y b·∫°n ƒë√£ nh·∫≠p v√†o h·ªá th·ªëng.
          </li>
          <li>
            <b>V√πng m√†u m·ª°:</b> L√† kho·∫£ng th·ªùi gian d·ªÖ th·ª• thai nh·∫•t, ƒë∆∞·ª£c t√≠nh ƒë·ªông d·ª±a tr√™n d·ªØ li·ªáu backend tr·∫£ v·ªÅ (th∆∞·ªùng l√† 7 ng√†y, t·ª´ <b>5 ng√†y tr∆∞·ªõc</b> ƒë·∫øn <b>1 ng√†y sau</b> ng√†y r·ª•ng tr·ª©ng). <br/>
            <i>ƒêi·ªÅu n√†y d·ª±a tr√™n nghi√™n c·ª©u khoa h·ªçc: tinh tr√πng c√≥ th·ªÉ s·ªëng t·ªëi ƒëa 5 ng√†y trong c∆° th·ªÉ ph·ª• n·ªØ, c√≤n tr·ª©ng ch·ªâ s·ªëng kho·∫£ng 1 ng√†y sau khi r·ª•ng.</i>
          </li>
          <li>
            <b>Ng√†y r·ª•ng tr·ª©ng:</b> ƒê∆∞·ª£c d·ª± ƒëo√°n l√† <b>14 ng√†y tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu k·ª≥ kinh nguy·ªát ti·∫øp theo</b>
            (t·ª©c l√† ng√†y th·ª© {currentPrediction.cycleLength - 14} t√≠nh t·ª´ ng√†y ƒë·∫ßu k·ª≥ kinh g·∫ßn nh·∫•t).<br/>
            <i>CƒÉn c·ª© theo khuy·∫øn ngh·ªã c·ªßa Hi·ªáp h·ªôi S·∫£n ph·ª• khoa Hoa K·ª≥ (ACOG).</i>
          </li>
          <li>
            <b>K·ª≥ ti·∫øp theo:</b> D·ª± ƒëo√°n d·ª±a tr√™n ƒë·ªô d√†i chu k·ª≥ trung b√¨nh c·ªßa b·∫°n, gi√∫p b·∫°n ch·ªß ƒë·ªông theo d√µi s·ª©c kh·ªèe v√† k·∫ø ho·∫°ch c√° nh√¢n.
          </li>
        </ul>
        <div className="text-xs text-blue-600 mt-2">
          <b>Ngu·ªìn tham kh·∫£o:</b> <a href="https://www.medicalnewstoday.com/articles/322951#maximizing-fertility" target="_blank" rel="noopener noreferrer" className="underline">ACOG - Your Menstrual Cycle</a>, <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3131874/" target="_blank" rel="noopener noreferrer" className="underline">Nghi√™n c·ª©u v·ªÅ tu·ªïi th·ªç tinh tr√πng v√† tr·ª©ng</a>
        </div>
      </div>
      <MenstrualCycleChart predictions={predictions} />
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        <CyclePhasePieChart prediction={currentPrediction} />
        <CycleStatistics prediction={currentPrediction} />
      </div>
    </div>
  );
};

export default CycleSummary; 